<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security-3.1.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <mvc:annotation-driven/>
    <context:component-scan base-package="spring"/>

    <bean id="log4jInitialization" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetClass" value="org.springframework.util.Log4jConfigurer"/>
        <property name="targetMethod" value="initLogging"/>
        <property name="arguments">
            <list>
                <value>classpath:log4j.properties</value>
            </list>
        </property>
    </bean>

    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"/>

    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/view"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
        <property name="definitions">
            <list>
                <value>/WEB-INF/layout/layout.xml</value>
            </list>
        </property>
    </bean>

    <!-- Spring Security -->

    <security:http pattern="/app/loginPage" security="none"/>

    <security:http>
        <security:intercept-url pattern="/loginPage/" access="ROLE_ANONYMOUS"/>
        <security:intercept-url pattern="/app/secureSources/**" access="ROLE_AUTH_USER"/>
        <security:intercept-url pattern="/app/**" access="ROLE_ADMIN, ROLE_AUTH_USER"/>
        <security:form-login login-processing-url="/app/j_spring_security_check"
                             login-page="/app/loginPage"
                             authentication-failure-url="/app/loginPage?error=true"
                             default-target-url="/"/>
        <security:logout logout-url="/app/j_spring_security_logout"
                         logout-success-url="/app/loginPage"/>
    </security:http>

    <security:user-service id="userServiceProvider" properties="classpath:user.properties">
    </security:user-service>

    <security:authentication-manager>
        <security:authentication-provider user-service-ref="userServiceProvider"/>
    </security:authentication-manager>

    <!-- Spring Security: cache-off configuration -->
    <mvc:interceptors>
        <bean id="webContentInterceptor" class="org.springframework.web.servlet.mvc.WebContentInterceptor">
            <property name="cacheSeconds" value="0"/>
            <property name="useExpiresHeader" value="true"/>
            <property name="useCacheControlHeader" value="true"/>
            <property name="useCacheControlNoStore" value="true"/>
        </bean>
    </mvc:interceptors>

</beans>






